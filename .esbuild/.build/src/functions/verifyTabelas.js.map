{
  "version": 3,
  "sources": ["../../../../src/functions/verifyTabelas.ts", "../../../../src/utils/dynamodbClients.ts"],
  "sourcesContent": ["import { APIGatewayProxyHandler } from 'aws-lambda';\nimport { document } from '../utils/dynamodbClients';\n\ninterface IUserCertificate {\n    name: string;\n    id: string;\n    created_at: string;\n    grade: string;\n}\n\nexport const handler: APIGatewayProxyHandler = async (event) => {\n    const { id } = event.pathParameters;\n\n    const response = await document\n        .query({\n            TableName: \"tabela\",\n            KeyConditionExpression: \"id = :id\",\n            ExpressionAttributeValues: {\n                \":id\": id,\n            }\n        }).promise();\n\n    const userCertificate = response.Items[0] as IUserCertificate;\n\n    if (userCertificate) {\n        return {\n            statusCode: 201,\n            body: JSON.stringify({\n                message: \" Certificado v\u00E1lido\",\n                name: userCertificate.name,\n                url: `https://certificatethiago.s3.amazonaws.com/${id}.pdf`\n            })\n        };\n    };\n    return {\n        statusCode: 400,\n        body: JSON.stringify({\n            message: \" Certificado inv\u00E1lido\",\n        }),\n    };\n};\n", "import { DynamoDB } from \"aws-sdk\"\n\nconst options = {\n    region: \"localhost\",\n    endpoint: \"http://localhost:8000\",\n}\n\nconst isOffline = () => {\n    return process.env.IS_OFFLINE;\n}\n\nexport const document = isOffline()\n    ? new DynamoDB.DocumentClient(options)\n    : new DynamoDB.DocumentClient();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,qBAAyB;AAEzB,IAAM,UAAU;AAAA,EACZ,QAAQ;AAAA,EACR,UAAU;AACd;AAEA,IAAM,YAAY,MAAM;AACpB,SAAO,QAAQ,IAAI;AACvB;AAEO,IAAM,WAAW,UAAU,IAC5B,IAAI,wBAAS,eAAe,OAAO,IACnC,IAAI,wBAAS,eAAe;;;ADH3B,IAAM,UAAkC,OAAO,UAAU;AAC5D,QAAM,EAAE,GAAG,IAAI,MAAM;AAErB,QAAM,WAAW,MAAM,SAClB,MAAM;AAAA,IACH,WAAW;AAAA,IACX,wBAAwB;AAAA,IACxB,2BAA2B;AAAA,MACvB,OAAO;AAAA,IACX;AAAA,EACJ,CAAC,EAAE,QAAQ;AAEf,QAAM,kBAAkB,SAAS,MAAM;AAEvC,MAAI,iBAAiB;AACjB,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACjB,SAAS;AAAA,QACT,MAAM,gBAAgB;AAAA,QACtB,KAAK,8CAA8C;AAAA,MACvD,CAAC;AAAA,IACL;AAAA,EACJ;AAAC;AACD,SAAO;AAAA,IACH,YAAY;AAAA,IACZ,MAAM,KAAK,UAAU;AAAA,MACjB,SAAS;AAAA,IACb,CAAC;AAAA,EACL;AACJ;",
  "names": []
}
